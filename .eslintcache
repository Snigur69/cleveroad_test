[{"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\index.js":"1","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\App.js":"2","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\reportWebVitals.js":"3","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\services\\firebase.js":"4","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Auth\\actons.js":"5","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Auth\\index.jsx":"6","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Auth\\constants.js":"7","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\Header\\index.jsx":"8","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\services\\api.js":"9","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\Registration\\index.jsx":"10","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\SignIn\\index.jsx":"11","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\ProductCard\\index.jsx":"12","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\store\\rootStore.js":"13","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Auth\\reducer.js":"14","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Products\\index.jsx":"15","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Products\\helper.js":"16","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\ProductCard\\helper.js":"17","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\ManageProduct\\index.jsx":"18","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\Portal\\index.jsx":"19","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\ManageProduct\\helper.js":"20","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\services\\auth.js":"21"},{"size":703,"mtime":1608572381318,"results":"22","hashOfConfig":"23"},{"size":2811,"mtime":1608663490208,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":463,"mtime":1608663477248,"results":"26","hashOfConfig":"23"},{"size":138,"mtime":1608663174169,"results":"27","hashOfConfig":"23"},{"size":2868,"mtime":1608663208005,"results":"28","hashOfConfig":"23"},{"size":35,"mtime":1608663175416,"results":"29","hashOfConfig":"23"},{"size":801,"mtime":1608662913556,"results":"30","hashOfConfig":"23"},{"size":1372,"mtime":1608663334522,"results":"31","hashOfConfig":"23"},{"size":5048,"mtime":1608663138088,"results":"32","hashOfConfig":"23"},{"size":4134,"mtime":1608663157969,"results":"33","hashOfConfig":"23"},{"size":2170,"mtime":1608662907570,"results":"34","hashOfConfig":"23"},{"size":316,"mtime":1608663383180,"results":"35","hashOfConfig":"23"},{"size":260,"mtime":1606573481004,"results":"36","hashOfConfig":"23"},{"size":1499,"mtime":1608663315574,"results":"37","hashOfConfig":"23"},{"size":242,"mtime":1608663312925,"results":"38","hashOfConfig":"23"},{"size":273,"mtime":1608662921492,"results":"39","hashOfConfig":"23"},{"size":16571,"mtime":1608663326992,"results":"40","hashOfConfig":"23"},{"size":592,"mtime":1608662917125,"results":"41","hashOfConfig":"23"},{"size":242,"mtime":1608663228323,"results":"42","hashOfConfig":"23"},{"size":206,"mtime":1608482073170,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1pzmnn2",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\index.js",["92"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/rootStore\";\nimport {firebaseInit} from \"./services/firebase\";\n\n// firebaseInit();\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store} >\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["93","94"],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\App.js",["95"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Auth from \"./containers/Auth\";\nimport Products from \"./containers/Products\";\nimport ManageProduct from \"./containers/ManageProduct\";\n\nimport { setUser } from \"./containers/Auth/actons\";\nimport { deleteProduct, pushProduct, editProductById } from \"./services/api\";\nimport { removeUserFromLocalStorage } from \"./services/auth\";\n\nconst App = () => {\n    const [productsTrigger, setProductsTrigger] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [currentProduct, setCurrentProduct] = useState(\"\");\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let user = localStorage.getItem(\"cleveroad_user\");\n        if (user) {\n            dispatch(setUser(user));\n        }\n    }, []);\n\n    const openModal = (e) => {\n        if (e.target.dataset.id) {\n            setCurrentProduct(e.target.dataset.id);\n        }\n        setModal(true);\n    };\n\n    const closeModal = () => {\n        setModal(false);\n        setCurrentProduct(\"\");\n        setProductsTrigger(!productsTrigger);\n    };\n\n    const removeProduct = (e) => {\n        deleteProduct(e.target.dataset.id);\n        setProductsTrigger(!productsTrigger);\n    };\n\n    const logOut = (e) => {\n        e.preventDefault();\n        dispatch(setUser(null));\n        firebase.auth().signOut();\n        removeUserFromLocalStorage();\n    };\n\n    return (\n        <div className=\"StoreApp\">\n            <Router>\n                <Header openModal={openModal} logOut={logOut} />\n                <Switch>\n                    <Route path=\"/login\">\n                        <Auth />\n                    </Route>\n                    <Route path=\"/\">\n                        <Products\n                            productsTrigger={productsTrigger}\n                            openModal={openModal}\n                            removeProduct={removeProduct}\n                        />\n                    </Route>\n                </Switch>\n            </Router>\n            {modal &&\n                (currentProduct ? (\n                    <ManageProduct\n                        submitForm={editProductById}\n                        id={currentProduct}\n                        closeModal={closeModal}\n                        type=\"EDIT\"\n                    />\n                ) : (\n                    <ManageProduct\n                        submitForm={pushProduct}\n                        closeModal={closeModal}\n                        type=\"ADD\"\n                    />\n                ))}\n        </div>\n    );\n};\n\nexport default App;\n","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\reportWebVitals.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\services\\firebase.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Auth\\actons.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Auth\\index.jsx",["96"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Registration from \"../../components/Registration\";\r\nimport SignIn from \"../../components/SignIn\";\r\nimport { setUser } from \"./actons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/messaging\";\r\nimport { setUserToLocalStorage } from \"../../services/auth\";\r\n\r\nconst Auth = () => {\r\n    const [isRegister, setIsRegister] = useState(false);\r\n    const [registerError, setRegisterError] = useState(\"\");\r\n    const [loginError, setLoginError] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.user);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(\"/\");\r\n        }\r\n    }, []);\r\n\r\n    const registerToggle = () => {\r\n        setIsRegister(!isRegister);\r\n    };\r\n\r\n    const handleRegister = async (email, password, name) => {\r\n        try {\r\n            setRegisterError(\"\");\r\n            const data = await firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(email, password)\r\n                .then(async function (userCred) {\r\n                    await userCred.user.updateProfile({\r\n                        displayName: name,\r\n                    });\r\n                    return userCred;\r\n                })\r\n                .catch((error) => {\r\n                    setRegisterError(error.message);\r\n                });\r\n            setUserToLocalStorage(data.user.uid);\r\n            dispatch(setUser(data.user.uid));\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            setRegisterError(error.message);\r\n        }\r\n    };\r\n\r\n    const handleSignIn = async (email, password) => {\r\n        try {\r\n            setLoginError(\"\");\r\n            const data = await firebase\r\n                .auth()\r\n                .signInWithEmailAndPassword(email, password);\r\n            setUserToLocalStorage(data.user.uid);\r\n            dispatch(setUser(data.user.uid));\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            setLoginError(error.message);\r\n        }\r\n    };\r\n\r\n    return user ? (\r\n        <></>\r\n    ) : (\r\n        <div>\r\n            {isRegister ? (\r\n                <Registration\r\n                    registerError={registerError}\r\n                    handleRegister={handleRegister}\r\n                    setRegister={registerToggle}\r\n                />\r\n            ) : (\r\n                <SignIn\r\n                    loginError={loginError}\r\n                    handleSignIn={handleSignIn}\r\n                    setRegister={registerToggle}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Auth\\constants.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\Header\\index.jsx",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\services\\api.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\Registration\\index.jsx",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\SignIn\\index.jsx",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\ProductCard\\index.jsx",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\store\\rootStore.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Auth\\reducer.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Products\\index.jsx",["97"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport ProductCard from \"../../components/ProductCard\";\r\n\r\nimport { getProducts } from \"../../services/api\";\r\nimport { productsTransform } from \"./helper\";\r\n\r\nconst Products = ({ productsTrigger, openModal, removeProduct }) => {\r\n    const history = useHistory();\r\n    const [products, setProducts] = useState();\r\n\r\n    useEffect(() => {\r\n        getProducts(history.location.pathname.slice(1))\r\n            .then((response) => {\r\n                setProducts(productsTransform(response));\r\n            })\r\n            .catch((error) => {\r\n                throw new Error(error);\r\n            });\r\n    }, [productsTrigger]);\r\n\r\n    return (\r\n        <div className={styles.category_page}>\r\n            <h1>Каталог</h1>\r\n            <h2>{history.location.pathname.slice(1)}</h2>\r\n            <div className={styles.products_wrap}>\r\n                {products &&\r\n                    products.map((el, index) => {\r\n                        return (\r\n                            <ProductCard\r\n                                openModal={openModal}\r\n                                removeProduct={removeProduct}\r\n                                key={index}\r\n                                {...el}\r\n                            />\r\n                        );\r\n                    })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\Products\\helper.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\ProductCard\\helper.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\ManageProduct\\index.jsx",["98"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Portal from \"../../components/Portal\";\r\nimport { Formik } from \"formik\";\r\nimport { object, string, number } from \"yup\";\r\n\r\nimport { getProductById } from \"../../services/api\";\r\nimport { getCurrentDate } from \"./helper\";\r\nimport storage from \"../../services/firebase\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nimport close from \"../../assets/img/close.png\";\r\n\r\nconst ManageProduct = ({ closeModal, id, submitForm, type }) => {\r\n    const [currentProduct, setCurrentProduct] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [imageStatus, setImageStatus] = useState(\"\");\r\n    const [imageStatusFlag, setImageStatusFlag] = useState(\"normal\");\r\n    const [customSubmitting, setCustomSubmitting] = useState(false);\r\n    const hiddenRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            getProductById(id)\r\n                .then((response) => {\r\n                    setCurrentProduct(response);\r\n                    setImageUrl(response.image);\r\n                    hiddenRef.current.focus();\r\n                    hiddenRef.current.blur();\r\n                })\r\n                .catch((error) => {\r\n                    throw new Error(error);\r\n                });\r\n        } else {\r\n            setCurrentProduct({\r\n                name: \"\",\r\n                description: \"\",\r\n                image: \"\",\r\n                price: \"\",\r\n                discount: \"\",\r\n                discountEnd: \"\",\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadImage = (e) => {\r\n        if (e.target.files[0]) {\r\n            setCustomSubmitting(true);\r\n            const img = e.target.files[0];\r\n            const uploadTask = storage.ref(`images/${img.name}`).put(img);\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                    setImageUrl(\"\");\r\n                    setImageStatus(\"Файл загружается на сервер...\");\r\n                    setImageStatusFlag(\"normal\");\r\n                },\r\n                (error) => {\r\n                    setImageStatus(\"Ошибка! Файл не был загружен на сервер!\");\r\n                    setImageStatusFlag(\"error\");\r\n                },\r\n                () => {\r\n                    storage\r\n                        .ref(\"images\")\r\n                        .child(img.name)\r\n                        .getDownloadURL()\r\n                        .then((url) => {\r\n                            setImageUrl(url);\r\n                            setImageStatus(\"Файл успешно загружен!\");\r\n                            setImageStatusFlag(\"success\");\r\n                            hiddenRef.current.focus();\r\n                            hiddenRef.current.blur();\r\n                            setCustomSubmitting(false);\r\n                        });\r\n                }\r\n            );\r\n        } else {\r\n            setImageStatus(\"\");\r\n            setImageUrl(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        currentProduct && (\r\n            <Portal>\r\n                <div className={styles.manage_product}>\r\n                    <img\r\n                        onClick={closeModal}\r\n                        className={styles.close}\r\n                        src={close}\r\n                        alt=\"\"\r\n                    />\r\n                    {type === \"ADD\" ? (\r\n                        <p className={styles.modal_title}>Добавить товар</p>\r\n                    ) : (\r\n                        <p className={styles.modal_title}>\r\n                            Редактировать товар\r\n                        </p>\r\n                    )}\r\n                    <Formik\r\n                        initialValues={{\r\n                            name: currentProduct.name,\r\n                            description: currentProduct.description,\r\n                            image: imageUrl,\r\n                            price: currentProduct.price,\r\n                            discount: currentProduct.discount,\r\n                            discountEnd: currentProduct.discountEnd,\r\n                        }}\r\n                        validationSchema={object().shape({\r\n                            name: string()\r\n                                .min(20, \"Минимум 20 символов\")\r\n                                .max(60, \"Максимум 60 символов\")\r\n                                .required(\"Поле обязательное!\"),\r\n                            description: string().max(\r\n                                200,\r\n                                \"Максимум 200 символов\"\r\n                            ),\r\n                            image: string().required(\"Поле обязательное!\"),\r\n                            price: number()\r\n                                .moreThan(0, \"Положительное число\")\r\n                                .max(\r\n                                    99999999.99,\r\n                                    \"Превышено максимальное значение\"\r\n                                )\r\n                                .required(\"Поле обязательное!\"),\r\n                            discount: number()\r\n                                .min(10, \"Минимальное значение - 10\")\r\n                                .max(90, \"Максимальное значение - 90\"),\r\n                        })}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        onSubmit={async (values) => {\r\n                            await submitForm(values, id)\r\n                                .then((response) => {\r\n                                    if (response === 200) {\r\n                                        closeModal();\r\n                                    }\r\n                                })\r\n                                .catch((error) => {\r\n                                    throw new Error(error);\r\n                                });\r\n                        }}\r\n                    >\r\n                        {({\r\n                            values,\r\n                            errors,\r\n                            isSubmitting,\r\n                            handleChange,\r\n                            handleSubmit,\r\n                        }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className={styles.input_wrap}>\r\n                                    <label htmlFor=\"name\">Название</label>\r\n                                    <input\r\n                                        disabled={isSubmitting}\r\n                                        className={\r\n                                            errors.name && styles.error_input\r\n                                        }\r\n                                        name=\"name\"\r\n                                        placeholder=\"Название\"\r\n                                        value={values.name}\r\n                                        error={errors.name}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    {errors.name && (\r\n                                        <p className={styles.error}>\r\n                                            {errors.name}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className={styles.input_wrap}>\r\n                                    <label htmlFor=\"description\">\r\n                                        Описание\r\n                                    </label>\r\n                                    <input\r\n                                        disabled={isSubmitting}\r\n                                        className={\r\n                                            errors.description &&\r\n                                            styles.error_input\r\n                                        }\r\n                                        name=\"description\"\r\n                                        placeholder=\"Описание\"\r\n                                        value={values.description}\r\n                                        error={errors.description}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    {errors.description && (\r\n                                        <p className={styles.error}>\r\n                                            {errors.description}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className={styles.input_wrap}>\r\n                                    <label htmlFor=\"image\">Изображение</label>\r\n                                    <label\r\n                                        className={styles.file_wrap}\r\n                                        htmlFor={styles.visible_input}\r\n                                    >\r\n                                        <input\r\n                                            id={styles.visible_input}\r\n                                            onChange={loadImage}\r\n                                            type=\"file\"\r\n                                            disabled={isSubmitting}\r\n                                        />\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            component=\"span\"\r\n                                        >\r\n                                            Загрузить изображение\r\n                                        </Button>\r\n                                    </label>\r\n                                    <input\r\n                                        ref={hiddenRef}\r\n                                        name=\"image\"\r\n                                        placeholder=\"Изображение\"\r\n                                        id={styles.hidden_image}\r\n                                        value={imageUrl}\r\n                                        onBlur={handleChange}\r\n                                        error={errors.image}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <p className={styles[imageStatusFlag]}>\r\n                                        {imageStatus}\r\n                                    </p>\r\n                                    {errors.image && (\r\n                                        <p className={styles.error}>\r\n                                            {errors.image}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className={styles.input_wrap}>\r\n                                    <label htmlFor=\"price\">Цена</label>\r\n                                    <input\r\n                                        disabled={isSubmitting}\r\n                                        className={\r\n                                            errors.price && styles.error_input\r\n                                        }\r\n                                        name=\"price\"\r\n                                        placeholder=\"Цена\"\r\n                                        value={values.price}\r\n                                        error={errors.price}\r\n                                        onChange={handleChange}\r\n                                        type=\"number\"\r\n                                    />\r\n                                    {errors.price && (\r\n                                        <p className={styles.error}>\r\n                                            {errors.price}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className={styles.input_wrap}>\r\n                                    <label htmlFor=\"discount\">Скидка</label>\r\n                                    <input\r\n                                        disabled={isSubmitting}\r\n                                        className={\r\n                                            errors.discount &&\r\n                                            styles.error_input\r\n                                        }\r\n                                        type=\"number\"\r\n                                        name=\"discount\"\r\n                                        placeholder=\"Скидка\"\r\n                                        value={values.discount}\r\n                                        error={errors.discount}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    {errors.discount && (\r\n                                        <p className={styles.error}>\r\n                                            {errors.discount}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className={styles.input_wrap}>\r\n                                    <label htmlFor=\"discountEnd\">\r\n                                        Дата окончания скидки\r\n                                    </label>\r\n                                    <input\r\n                                        disabled={isSubmitting}\r\n                                        className={\r\n                                            errors.discountEnd &&\r\n                                            styles.error_input\r\n                                        }\r\n                                        name=\"discountEnd\"\r\n                                        placeholder=\"Дата окончания скидки\"\r\n                                        value={values.discountEnd}\r\n                                        error={errors.discountEnd}\r\n                                        onChange={handleChange}\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        min={getCurrentDate()}\r\n                                    />\r\n                                    {errors.discountEnd && (\r\n                                        <p className={styles.error}>\r\n                                            {errors.discountEnd}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className={styles.submit_wrap}>\r\n                                    {type === \"ADD\" ? (\r\n                                        <button\r\n                                            className={styles.submit}\r\n                                            disabled={\r\n                                                isSubmitting || customSubmitting\r\n                                            }\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Добавить\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button\r\n                                            className={styles.submit}\r\n                                            disabled={\r\n                                                isSubmitting || customSubmitting\r\n                                            }\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Редактировать\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </Portal>\r\n        )\r\n    );\r\n};\r\n\r\nexport default ManageProduct;\r\n","C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\components\\Portal\\index.jsx",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\containers\\ManageProduct\\helper.js",[],"C:\\Users\\Anton\\Desktop\\CLEVEROAD TEST\\cleveroad_test\\src\\services\\auth.js",[],{"ruleId":"99","severity":1,"message":"100","line":8,"column":9,"nodeType":"101","messageId":"102","endLine":8,"endColumn":21},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":30,"column":8,"nodeType":"109","endLine":30,"endColumn":10,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":28,"column":8,"nodeType":"109","endLine":28,"endColumn":10,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":21,"column":8,"nodeType":"109","endLine":21,"endColumn":25,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"115","line":45,"column":8,"nodeType":"109","endLine":45,"endColumn":10,"suggestions":"116"},"no-unused-vars","'firebaseInit' is defined but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["119"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["120"],"React Hook useEffect has a missing dependency: 'history.location.pathname'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch]",{"range":"131","text":"132"},"Update the dependencies array to be: [history, user]",{"range":"133","text":"134"},"Update the dependencies array to be: [history.location.pathname, productsTrigger]",{"range":"135","text":"136"},"Update the dependencies array to be: [id]",{"range":"137","text":"138"},[1018,1020],"[dispatch]",[937,939],"[history, user]",[744,761],"[history.location.pathname, productsTrigger]",[1602,1604],"[id]"]